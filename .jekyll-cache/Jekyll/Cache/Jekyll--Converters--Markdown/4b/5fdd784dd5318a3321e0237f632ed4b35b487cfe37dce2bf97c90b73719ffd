I"E)<h2 id="사용자-정의-변수-set">사용자 정의 변수 SET</h2>

<p><code class="language-plaintext highlighter-rouge">MySQL</code>에서 사용자 정의 변수를 사용할 때에는 <code class="language-plaintext highlighter-rouge">SET</code>을 사용한다. 
사용자 정의 변수는 정수, 부동 소수점, 2진수 NULL 값과 같은 제한된 데이터 형식에서 값을 할당할 수 있다.</p>

<pre><code class="language-mysql">&lt;사용자 정의 변수 선언 및 초기화&gt;
SET @변수이름 = 대입값 (또는 SET @변수이름 := 대입값)

SELECT @변수이름 := 대입값
</code></pre>

<ul>
  <li><code class="language-plaintext highlighter-rouge">SET</code>으로 변수를 선언할 수 있으며, <code class="language-plaintext highlighter-rouge">@변수이름</code>으로 다른 구에서 할당한 변수를 사용할 수 있다.</li>
  <li><code class="language-plaintext highlighter-rouge">SET</code>으로 변수를 선얼 할 때에는 <code class="language-plaintext highlighter-rouge">=</code>과 <code class="language-plaintext highlighter-rouge">:=</code>을 모두 사용할 수 있으며, <code class="language-plaintext highlighter-rouge">SET 외의 구</code>에서는 <code class="language-plaintext highlighter-rouge">=</code>이 비교연산자로 처리되기때문에 <code class="language-plaintext highlighter-rouge">:=</code>으로만 선언한 변수를 할당할 수 있다.</li>
  <li>사용자 정의 변수를 포함하는 식은 연산 처리 순서가 정의되지 않는다. 예를 들어 <code class="language-plaintext highlighter-rouge">SELECT @a, @a:=@a+1</code>이 <code class="language-plaintext highlighter-rouge">@a</code>를 먼저 처리한 다음 <code class="language-plaintext highlighter-rouge">@a:=@a+1</code>을 수행한다는 보장은 없다.</li>
</ul>

<p>다음은 프로그래머스에서 가져온 <a href="https://programmers.co.kr/learn/courses/30/lessons/59413">입양 시각 구하기 2</a> 문제이다.</p>

<h2 id="문제-설명">문제 설명</h2>

<p>ANIMAL_OUTS 테이블은 동물 보호소에서 입양 보낸 동물의 정보를 담은 테이블입니다. ANIMAL_OUTS 테이블 구조는 다음과 같으며, ANIMAL_ID, ANIMAL_TYPE, DATETIME, NAME, SEX_UPON_OUTCOME는 각각 동물의 아이디, 생물 종, 입양일, 이름, 성별 및 중성화 여부를 나타냅니다.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">NAME</th>
      <th style="text-align: center">TYPE</th>
      <th style="text-align: center">NULLABLE</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">ANIMAL_ID</td>
      <td style="text-align: center">VARCHAR(N)</td>
      <td style="text-align: center">FALSE</td>
    </tr>
    <tr>
      <td style="text-align: center">ANIMAL_TYPE</td>
      <td style="text-align: center">VARCHAR(N)</td>
      <td style="text-align: center">FALSE</td>
    </tr>
    <tr>
      <td style="text-align: center">DATETIME</td>
      <td style="text-align: center">DATETIME</td>
      <td style="text-align: center">FALSE</td>
    </tr>
    <tr>
      <td style="text-align: center">NAME</td>
      <td style="text-align: center">VARCHAR(N)</td>
      <td style="text-align: center">TRUE</td>
    </tr>
    <tr>
      <td style="text-align: center">SEX_UPON_OUTCOME</td>
      <td style="text-align: center">VARCHAR(N)</td>
      <td style="text-align: center">FALSE</td>
    </tr>
  </tbody>
</table>

<p>보호소에서는 몇 시에 입양이 가장 활발하게 일어나는지 알아보려 합니다. 0시부터 23시까지, 각 시간대별로 입양이 몇 건이나 발생했는지 조회하는 SQL문을 작성해주세요. 이때 결과는 시간대 순으로 정렬해야 합니다.</p>

<h2 id="결과">결과</h2>

<p>SQL문을 실행하면 다음과 같이 나와야 합니다.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">HOUR</th>
      <th style="text-align: center">COUNT</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">0</td>
      <td style="text-align: center">0</td>
    </tr>
    <tr>
      <td style="text-align: center">1</td>
      <td style="text-align: center">0</td>
    </tr>
    <tr>
      <td style="text-align: center">2</td>
      <td style="text-align: center">0</td>
    </tr>
    <tr>
      <td style="text-align: center">3</td>
      <td style="text-align: center">0</td>
    </tr>
    <tr>
      <td style="text-align: center">4</td>
      <td style="text-align: center">0</td>
    </tr>
    <tr>
      <td style="text-align: center">5</td>
      <td style="text-align: center">0</td>
    </tr>
    <tr>
      <td style="text-align: center">6</td>
      <td style="text-align: center">0</td>
    </tr>
    <tr>
      <td style="text-align: center">9</td>
      <td style="text-align: center">1</td>
    </tr>
    <tr>
      <td style="text-align: center">10</td>
      <td style="text-align: center">2</td>
    </tr>
    <tr>
      <td style="text-align: center">11</td>
      <td style="text-align: center">13</td>
    </tr>
    <tr>
      <td style="text-align: center">12</td>
      <td style="text-align: center">10</td>
    </tr>
    <tr>
      <td style="text-align: center">13</td>
      <td style="text-align: center">14</td>
    </tr>
    <tr>
      <td style="text-align: center">14</td>
      <td style="text-align: center">9</td>
    </tr>
    <tr>
      <td style="text-align: center">15</td>
      <td style="text-align: center">7</td>
    </tr>
    <tr>
      <td style="text-align: center">16</td>
      <td style="text-align: center">10</td>
    </tr>
    <tr>
      <td style="text-align: center">17</td>
      <td style="text-align: center">12</td>
    </tr>
    <tr>
      <td style="text-align: center">18</td>
      <td style="text-align: center">16</td>
    </tr>
    <tr>
      <td style="text-align: center">19</td>
      <td style="text-align: center">2</td>
    </tr>
    <tr>
      <td style="text-align: center">20</td>
      <td style="text-align: center">0</td>
    </tr>
    <tr>
      <td style="text-align: center">21</td>
      <td style="text-align: center">0</td>
    </tr>
    <tr>
      <td style="text-align: center">22</td>
      <td style="text-align: center">0</td>
    </tr>
    <tr>
      <td style="text-align: center">23</td>
      <td style="text-align: center">0</td>
    </tr>
  </tbody>
</table>

<h2 id="코드">코드</h2>

<pre><code class="language-mysql">SET @hour = -1; # 변수 선언

SELECT 
    @hour := @hour + 1 AS HOUR,
    (SELECT 
        COUNT(*) 
        FROM ANIMAL_OUTS 
        WHERE HOUR(DATETIME) = @hour) AS COUNT
FROM ANIMAL_OUTS
WHERE @hour &lt; 23
</code></pre>
<p><span style="color: #2D3748; background-color:#fff5b1;">
처리 순서: SET - FROM - WHERE - SELECT - SubQuery(FROM WHERE SELECT )
</span></p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">SET @hour = -1</code>을 통해 <code class="language-plaintext highlighter-rouge">hour</code>라는 변수이름에 값 <code class="language-plaintext highlighter-rouge">-1</code>을 선언한다.</li>
  <li><code class="language-plaintext highlighter-rouge">WHERE</code>을 통해 <code class="language-plaintext highlighter-rouge">hour</code>이 <code class="language-plaintext highlighter-rouge">23</code>미만인 값만 선택한다.
    <ul>
      <li><span style="color: #2D3748; background-color:#fff5b1;">참고</span> <code class="language-plaintext highlighter-rouge">WHERE HOUR &lt; 23</code>을 사용하면 에러가 발생한다. 이유는 <code class="language-plaintext highlighter-rouge">WHERE</code>구가 <code class="language-plaintext highlighter-rouge">SELECT</code>보다 연산 순서가 우선이라 <code class="language-plaintext highlighter-rouge">SELECT</code>를 통한 <code class="language-plaintext highlighter-rouge">HOUR</code> 열을 할당하기 전이라 참조할 변수가 없기 때문이다.</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">SELECT</code> 구에서 앞서 선언한 <code class="language-plaintext highlighter-rouge">hour</code>을 불러오며 <code class="language-plaintext highlighter-rouge">@hour := @hour + 1</code>를 통해 <code class="language-plaintext highlighter-rouge">hour</code> 값에 <code class="language-plaintext highlighter-rouge">1</code>씩 증가한 값을 <code class="language-plaintext highlighter-rouge">ANIMAL_OUTS</code>라는 테이블의 행 개수 만큼 <code class="language-plaintext highlighter-rouge">AS HOUR</code>로 이름이 <code class="language-plaintext highlighter-rouge">HOUR</code>로 선언된 <code class="language-plaintext highlighter-rouge">HOUR</code> 열에 할당한다.</li>
  <li>이제 <code class="language-plaintext highlighter-rouge">SELECT</code> 내부 <code class="language-plaintext highlighter-rouge">SubQuery</code>를 보자.
    <ul>
      <li><code class="language-plaintext highlighter-rouge">FROM</code>을 통해 <code class="language-plaintext highlighter-rouge">ANIMAL_OUTS</code> 테이블을 선택한다.</li>
      <li><code class="language-plaintext highlighter-rouge">DATETIME</code> 데이터의 시간만 출력한 <code class="language-plaintext highlighter-rouge">HOUR(DATETIME)</code>의 값을 앞서 선언한 <code class="language-plaintext highlighter-rouge">hour</code>로 할당하며 <code class="language-plaintext highlighter-rouge">WHERE</code>을 통해 해당 열만 선택한다.</li>
      <li><code class="language-plaintext highlighter-rouge">COUNT</code>를 통해 <code class="language-plaintext highlighter-rouge">WHERE</code>로 제한된 열의 값을 계산한다.</li>
      <li><code class="language-plaintext highlighter-rouge">AS COUNT</code>를 통해 <code class="language-plaintext highlighter-rouge">SubQuery</code>에 할당된 열의 이름을 <code class="language-plaintext highlighter-rouge">COUNT</code>라고 한다.</li>
    </ul>
  </li>
</ul>

<h2 id="references">References</h2>

<ul>
  <li><a href="https://chanhuiseok.github.io/posts/db-6/">ChanBLOG, [프로그래머스] 입양 시각 구하기(1), (2) (GROUP BY, HAVING, SET)</a></li>
  <li><a href="https://dev.mysql.com/doc/refman/8.0/en/user-variables.html">MySQL 메뉴얼, User-Defined Variables</a></li>
  <li><a href="https://programmers.co.kr/learn/courses/30/lessons/59412">프로그래머스, 입양 시각 구하기 1</a></li>
  <li><a href="https://programmers.co.kr/learn/courses/30/lessons/59413">프로그래머스, 입양 시각 구하기 2</a></li>
</ul>
:ET